name: Build and Run C# Application on Excel File Push

on:
  push: # Trigger the workflow on push events
    branches:
      - main # Adjust this based on your branch
    paths:
      - '**.xlsx' # Detect any Excel file changes in the repository

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Clone C# Application Repository
      run: git clone https://github.com/chandrashekhar54/GRL-Zoho-Insights.git
      # If the repo is private, you may need to use a personal access token (PAT)

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x' # Adjust the version based on your project

    - name: Restore NuGet packages
      run: dotnet restore GRL-Zoho-Insights/GRL-Zoho-Insights.csproj

    - name: Detect Changed Excel File
      id: detect_excel_file
      run: |
        echo "Checking for changed .xlsx files..."
        CHANGED_FILE=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '\.xlsx$' | head -n 1)
        echo "Changed file: $CHANGED_FILE"
        echo "::set-output name=excel_file::$CHANGED_FILE"
      
    - name: Fail if no Excel file was changed
      if: steps.detect_excel_file.outputs.excel_file == ''
      run: |
        echo "Error: No Excel file detected in the recent push."
        exit 1

    - name: Build the C# Application
      run: dotnet build --configuration Release GRL-Zoho-Insights/GRL-Zoho-Insights.csproj

    - name: Run the C# Application
      run: dotnet run --project GRL-Zoho-Insights -- "$GITHUB_WORKSPACE/${{ steps.detect_excel_file.outputs.excel_file }}"

    - name: Display Success Message
      run: echo "C# Application executed successfully with the Excel file."
